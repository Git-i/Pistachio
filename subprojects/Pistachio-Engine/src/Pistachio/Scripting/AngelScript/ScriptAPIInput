#include "Pistachio/Core/Input.h"
#include "Pistachio/Core/KeyCodes.h"
#include "ScriptAPICommon.h"
#include "angelscript.h"
namespace Pistachio
{
    namespace Scripting
    {
        namespace SInput
        {
            static void RegisterKeyCodes()
            {

                engine->RegisterEnumValue("KeyCode", "Space          ", PT_KEY_SPACE              );
                engine->RegisterEnumValue("KeyCode", "Apostrophe     ", PT_KEY_APOSTROPHE         );
                engine->RegisterEnumValue("KeyCode", "Comma          ", PT_KEY_COMMA              );
                engine->RegisterEnumValue("KeyCode", "Minus          ", PT_KEY_MINUS              );
                engine->RegisterEnumValue("KeyCode", "Period         ", PT_KEY_PERIOD             );
                engine->RegisterEnumValue("KeyCode", "Slash          ", PT_KEY_SLASH              );
                engine->RegisterEnumValue("KeyCode", "0              ", PT_KEY_0                  );
                engine->RegisterEnumValue("KeyCode", "1              ", PT_KEY_1                  );
                engine->RegisterEnumValue("KeyCode", "2              ", PT_KEY_2                  );   
                engine->RegisterEnumValue("KeyCode", "3              ", PT_KEY_3                  );  
                engine->RegisterEnumValue("KeyCode", "4              ", PT_KEY_4                  );  
                engine->RegisterEnumValue("KeyCode", "5              ", PT_KEY_5                  );  
                engine->RegisterEnumValue("KeyCode", "6              ", PT_KEY_6                  ); 
                engine->RegisterEnumValue("KeyCode", "7              ", PT_KEY_7                  );          
                engine->RegisterEnumValue("KeyCode", "8              ", PT_KEY_8                  );
                engine->RegisterEnumValue("KeyCode", "9              ", PT_KEY_9                  );
                engine->RegisterEnumValue("KeyCode", "Semicolon      ", PT_KEY_SEMICOLON          );
                engine->RegisterEnumValue("KeyCode", "Equal          ", PT_KEY_EQUAL              );
                engine->RegisterEnumValue("KeyCode", "A              ", PT_KEY_A                  );
                engine->RegisterEnumValue("KeyCode", "B              ", PT_KEY_B                  );
                engine->RegisterEnumValue("KeyCode", "C              ", PT_KEY_C                  );
                engine->RegisterEnumValue("KeyCode", "D              ", PT_KEY_D                  );
                engine->RegisterEnumValue("KeyCode", "E              ", PT_KEY_E                  );
                engine->RegisterEnumValue("KeyCode", "F              ", PT_KEY_F                  );
                engine->RegisterEnumValue("KeyCode", "G              ", PT_KEY_G                  );
                engine->RegisterEnumValue("KeyCode", "H              ", PT_KEY_H                  );
                engine->RegisterEnumValue("KeyCode", "I              ", PT_KEY_I                  );
                engine->RegisterEnumValue("KeyCode", "J              ", PT_KEY_J                  );
                engine->RegisterEnumValue("KeyCode", "K              ", PT_KEY_K                  );
                engine->RegisterEnumValue("KeyCode", "L              ", PT_KEY_L                  );
                engine->RegisterEnumValue("KeyCode", "M              ", PT_KEY_M                  );
                engine->RegisterEnumValue("KeyCode", "N              ", PT_KEY_N                  );
                engine->RegisterEnumValue("KeyCode", "O              ", PT_KEY_O                  );
                engine->RegisterEnumValue("KeyCode", "P              ", PT_KEY_P                  );
                engine->RegisterEnumValue("KeyCode", "Q              ", PT_KEY_Q                  );
                engine->RegisterEnumValue("KeyCode", "R              ", PT_KEY_R                  );
                engine->RegisterEnumValue("KeyCode", "S              ", PT_KEY_S                  );
                engine->RegisterEnumValue("KeyCode", "T              ", PT_KEY_T                  );
                engine->RegisterEnumValue("KeyCode", "U              ", PT_KEY_U                  );
                engine->RegisterEnumValue("KeyCode", "V              ", PT_KEY_V                  );
                engine->RegisterEnumValue("KeyCode", "W              ", PT_KEY_W                  );
                engine->RegisterEnumValue("KeyCode", "X              ", PT_KEY_X                  );
                engine->RegisterEnumValue("KeyCode", "Y              ", PT_KEY_Y                  );
                engine->RegisterEnumValue("KeyCode", "Z              ", PT_KEY_Z                  );
                engine->RegisterEnumValue("KeyCode", "LeftBracket    ", PT_KEY_LEFT_BRACKET       );
                engine->RegisterEnumValue("KeyCode", "Backslash      ", PT_KEY_BACKSLASH          );
                engine->RegisterEnumValue("KeyCode", "RightBracket   ", PT_KEY_RIGHT_BRACKET      );
                engine->RegisterEnumValue("KeyCode", "GraveAccent    ", PT_KEY_GRAVE_ACCENT       );
                engine->RegisterEnumValue("KeyCode", "World1         ", PT_KEY_WORLD_1            );
                engine->RegisterEnumValue("KeyCode", "World2         ", PT_KEY_WORLD_2            );
                engine->RegisterEnumValue("KeyCode", "Escape         ", PT_KEY_ESCAPE             );
                engine->RegisterEnumValue("KeyCode", "Enter          ", PT_KEY_ENTER              );
                engine->RegisterEnumValue("KeyCode", "Tab            ", PT_KEY_TAB                );
                engine->RegisterEnumValue("KeyCode", "Backspace      ", PT_KEY_BACKSPACE          );
                engine->RegisterEnumValue("KeyCode", "Insert         ", PT_KEY_INSERT             );
                engine->RegisterEnumValue("KeyCode", "Delete         ", PT_KEY_DELETE             );
                engine->RegisterEnumValue("KeyCode", "Right          ", PT_KEY_RIGHT              );
                engine->RegisterEnumValue("KeyCode", "Left           ", PT_KEY_LEFT               );
                engine->RegisterEnumValue("KeyCode", "Down           ", PT_KEY_DOWN               );
                engine->RegisterEnumValue("KeyCode", "Up             ", PT_KEY_UP                 );
                engine->RegisterEnumValue("KeyCode", "PageUp         ", PT_KEY_PAGE_UP            );
                engine->RegisterEnumValue("KeyCode", "PageDown       ", PT_KEY_PAGE_DOWN          );
                engine->RegisterEnumValue("KeyCode", "Home           ", PT_KEY_HOME               );
                engine->RegisterEnumValue("KeyCode", "End            ", PT_KEY_END                );
                engine->RegisterEnumValue("KeyCode", "CapsLock       ", PT_KEY_CAPS_LOCK          );
                engine->RegisterEnumValue("KeyCode", "ScrollLock     ", PT_KEY_SCROLL_LOCK        );
                engine->RegisterEnumValue("KeyCode", "NumLock        ", PT_KEY_NUM_LOCK           );
                engine->RegisterEnumValue("KeyCode", "PrintScreen    ", PT_KEY_PRINT_SCREEN       );
                engine->RegisterEnumValue("KeyCode", "Pause          ", PT_KEY_PAUSE              );
                engine->RegisterEnumValue("KeyCode", "F1             ", PT_KEY_F1                 );
                engine->RegisterEnumValue("KeyCode", "F2             ", PT_KEY_F2                 );
                engine->RegisterEnumValue("KeyCode", "F3             ", PT_KEY_F3                 );
                engine->RegisterEnumValue("KeyCode", "F4             ", PT_KEY_F4                 );
                engine->RegisterEnumValue("KeyCode", "F5             ", PT_KEY_F5                 );
                engine->RegisterEnumValue("KeyCode", "F6             ", PT_KEY_F6                 );
                engine->RegisterEnumValue("KeyCode", "F7             ", PT_KEY_F7                 );
                engine->RegisterEnumValue("KeyCode", "F8             ", PT_KEY_F8                 );
                engine->RegisterEnumValue("KeyCode", "F9             ", PT_KEY_F9                 );
                engine->RegisterEnumValue("KeyCode", "F10            ", PT_KEY_F10                );
                engine->RegisterEnumValue("KeyCode", "F11            ", PT_KEY_F11                );
                engine->RegisterEnumValue("KeyCode", "F12            ", PT_KEY_F12                );
                engine->RegisterEnumValue("KeyCode", "F13            ", PT_KEY_F13                );
                engine->RegisterEnumValue("KeyCode", "F14            ", PT_KEY_F14                );
                engine->RegisterEnumValue("KeyCode", "F15            ", PT_KEY_F15                );
                engine->RegisterEnumValue("KeyCode", "F16            ", PT_KEY_F16                );
                engine->RegisterEnumValue("KeyCode", "F17            ", PT_KEY_F17                );
                engine->RegisterEnumValue("KeyCode", "F18            ", PT_KEY_F18                );
                engine->RegisterEnumValue("KeyCode", "F19            ", PT_KEY_F19                );
                engine->RegisterEnumValue("KeyCode", "F20            ", PT_KEY_F20                );
                engine->RegisterEnumValue("KeyCode", "F21            ", PT_KEY_F21                );
                engine->RegisterEnumValue("KeyCode", "F22            ", PT_KEY_F22                );
                engine->RegisterEnumValue("KeyCode", "F23            ", PT_KEY_F23                );
                engine->RegisterEnumValue("KeyCode", "F24            ", PT_KEY_F24                );
                engine->RegisterEnumValue("KeyCode", "F25            ", PT_KEY_F25                );
                engine->RegisterEnumValue("KeyCode", "KP_0           ", PT_KEY_KP_0               );
                engine->RegisterEnumValue("KeyCode", "KP_1           ", PT_KEY_KP_1               );
                engine->RegisterEnumValue("KeyCode", "KP_2           ", PT_KEY_KP_2               );
                engine->RegisterEnumValue("KeyCode", "KP_3           ", PT_KEY_KP_3               );
                engine->RegisterEnumValue("KeyCode", "KP_4           ", PT_KEY_KP_4               );
                engine->RegisterEnumValue("KeyCode", "KP_5           ", PT_KEY_KP_5               );
                engine->RegisterEnumValue("KeyCode", "KP_6           ", PT_KEY_KP_6               );
                engine->RegisterEnumValue("KeyCode", "KP_7           ", PT_KEY_KP_7               );
                engine->RegisterEnumValue("KeyCode", "KP_8           ", PT_KEY_KP_8               );
                engine->RegisterEnumValue("KeyCode", "KP_9           ", PT_KEY_KP_9               );
                engine->RegisterEnumValue("KeyCode", "KpDecimal      ", PT_KEY_KP_DECIMAL         );
                engine->RegisterEnumValue("KeyCode", "KpDivide       ", PT_KEY_KP_DIVIDE          );
                engine->RegisterEnumValue("KeyCode", "KpMultiply     ", PT_KEY_KP_MULTIPLY        );
                engine->RegisterEnumValue("KeyCode", "KpSubtract     ", PT_KEY_KP_SUBTRACT        );
                engine->RegisterEnumValue("KeyCode", "KpAdd          ", PT_KEY_KP_ADD             );
                engine->RegisterEnumValue("KeyCode", "KpEnter        ", PT_KEY_KP_ENTER           );
                engine->RegisterEnumValue("KeyCode", "KpEqual        ", PT_KEY_KP_EQUAL           );
                engine->RegisterEnumValue("KeyCode", "LeftShift      ", PT_KEY_LEFT_SHIFT         );
                engine->RegisterEnumValue("KeyCode", "LeftControl    ", PT_KEY_LEFT_CONTROL       );
                engine->RegisterEnumValue("KeyCode", "LeftAlt        ", PT_KEY_LEFT_ALT           );
                engine->RegisterEnumValue("KeyCode", "LeftSuper      ", PT_KEY_LEFT_SUPER         );
                engine->RegisterEnumValue("KeyCode", "RightShift     ", PT_KEY_RIGHT_SHIFT        );
                engine->RegisterEnumValue("KeyCode", "RightControl   ", PT_KEY_RIGHT_CONTROL      );
                engine->RegisterEnumValue("KeyCode", "RightAlt       ", PT_KEY_RIGHT_ALT          );
                engine->RegisterEnumValue("KeyCode", "RightSuper     ", PT_KEY_RIGHT_SUPER        );
                engine->RegisterEnumValue("KeyCode", "Menu           ", PT_KEY_MENU               );
                engine->RegisterEnumValue("KeyCode", "Mouse4     ", PT_MOUSE_BUTTON_4         );
                engine->RegisterEnumValue("KeyCode", "Mouse5     ", PT_MOUSE_BUTTON_5         );
                engine->RegisterEnumValue("KeyCode", "Mouse6     ", PT_MOUSE_BUTTON_6         );
                engine->RegisterEnumValue("KeyCode", "Mouse7     ", PT_MOUSE_BUTTON_7         );
                engine->RegisterEnumValue("KeyCode", "Mouse8     ", PT_MOUSE_BUTTON_8         );
                engine->RegisterEnumValue("KeyCode", "MouseLeft  ", PT_MOUSE_BUTTON_LEFT      );
                engine->RegisterEnumValue("KeyCode", "MouseRight ", PT_MOUSE_BUTTON_RIGHT     );
                engine->RegisterEnumValue("KeyCode", "MouseMiddle", PT_MOUSE_BUTTON_MIDDLE    );
            }
            void Initialize()
            {
                engine->RegisterEnum("KeyCode");
                RegisterKeyCodes();
                engine->RegisterGlobalFunction("bool IsKeyJustPressed(KeyCode code)",asFUNCTION(Input::IsKeyJustPressed),0);
                engine->RegisterGlobalFunction("bool IsKeyDown(KeyCode code)",asFUNCTION(Input::IsKeyPressed),0);
                engine->RegisterGlobalFunction("int GetMouseX(bool windowCoordinates = false)", asFUNCTION(Input::GetMouseX), asCALL_CDECL);
            }
        }
    }
}